# Generated from LangLexer.g4 by ANTLR 4.13.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,13,87,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,1,0,
        4,0,29,8,0,11,0,12,0,30,1,1,4,1,34,8,1,11,1,12,1,35,1,1,1,1,4,1,
        40,8,1,11,1,12,1,41,1,2,1,2,1,2,1,2,5,2,48,8,2,10,2,12,2,51,9,2,
        1,3,1,3,5,3,55,8,3,10,3,12,3,58,9,3,1,3,1,3,1,4,1,4,1,5,1,5,1,6,
        1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,4,10,75,8,10,11,10,12,10,76,1,10,
        1,10,1,11,4,11,82,8,11,11,11,12,11,83,1,12,1,12,2,56,83,0,13,1,1,
        3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,1,0,
        3,1,0,48,57,2,0,10,10,13,13,3,0,9,10,12,13,32,32,93,0,1,1,0,0,0,
        0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,
        1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,
        1,0,0,0,0,25,1,0,0,0,1,28,1,0,0,0,3,33,1,0,0,0,5,43,1,0,0,0,7,52,
        1,0,0,0,9,61,1,0,0,0,11,63,1,0,0,0,13,65,1,0,0,0,15,67,1,0,0,0,17,
        69,1,0,0,0,19,71,1,0,0,0,21,74,1,0,0,0,23,81,1,0,0,0,25,85,1,0,0,
        0,27,29,7,0,0,0,28,27,1,0,0,0,29,30,1,0,0,0,30,28,1,0,0,0,30,31,
        1,0,0,0,31,2,1,0,0,0,32,34,7,0,0,0,33,32,1,0,0,0,34,35,1,0,0,0,35,
        33,1,0,0,0,35,36,1,0,0,0,36,37,1,0,0,0,37,39,5,46,0,0,38,40,7,0,
        0,0,39,38,1,0,0,0,40,41,1,0,0,0,41,39,1,0,0,0,41,42,1,0,0,0,42,4,
        1,0,0,0,43,44,5,47,0,0,44,45,5,47,0,0,45,49,1,0,0,0,46,48,8,1,0,
        0,47,46,1,0,0,0,48,51,1,0,0,0,49,47,1,0,0,0,49,50,1,0,0,0,50,6,1,
        0,0,0,51,49,1,0,0,0,52,56,5,123,0,0,53,55,9,0,0,0,54,53,1,0,0,0,
        55,58,1,0,0,0,56,57,1,0,0,0,56,54,1,0,0,0,57,59,1,0,0,0,58,56,1,
        0,0,0,59,60,5,125,0,0,60,8,1,0,0,0,61,62,5,43,0,0,62,10,1,0,0,0,
        63,64,5,42,0,0,64,12,1,0,0,0,65,66,5,47,0,0,66,14,1,0,0,0,67,68,
        5,45,0,0,68,16,1,0,0,0,69,70,5,40,0,0,70,18,1,0,0,0,71,72,5,41,0,
        0,72,20,1,0,0,0,73,75,7,2,0,0,74,73,1,0,0,0,75,76,1,0,0,0,76,74,
        1,0,0,0,76,77,1,0,0,0,77,78,1,0,0,0,78,79,6,10,0,0,79,22,1,0,0,0,
        80,82,3,25,12,0,81,80,1,0,0,0,82,83,1,0,0,0,83,84,1,0,0,0,83,81,
        1,0,0,0,84,24,1,0,0,0,85,86,9,0,0,0,86,26,1,0,0,0,8,0,30,35,41,49,
        56,76,83,1,6,0,0
    ]

class LangLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    INT = 1
    REAL = 2
    COMMENT = 3
    MULTILINE_COMMENT = 4
    SUM = 5
    MUL = 6
    DIV = 7
    SUB = 8
    LP = 9
    RP = 10
    WS = 11
    INVALID_TOKEN = 12
    INVALID = 13

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'+'", "'*'", "'/'", "'-'", "'('", "')'" ]

    symbolicNames = [ "<INVALID>",
            "INT", "REAL", "COMMENT", "MULTILINE_COMMENT", "SUM", "MUL", 
            "DIV", "SUB", "LP", "RP", "WS", "INVALID_TOKEN", "INVALID" ]

    ruleNames = [ "INT", "REAL", "COMMENT", "MULTILINE_COMMENT", "SUM", 
                  "MUL", "DIV", "SUB", "LP", "RP", "WS", "INVALID_TOKEN", 
                  "INVALID" ]

    grammarFileName = "LangLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


